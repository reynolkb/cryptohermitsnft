{"version":3,"sources":["components/Navbar/Crypto-Hermits-Logo-2-Small.png","components/Navbar/Navbar.js","components/Home/desktop.jpeg","components/Home/mobile.jpeg","components/About/About.js","components/Roadmap/Roadmap.js","components/Team/Team.js","components/FAQS/FAQS.js","components/Connect/Connect.js","components/Home/Home.js","util/interact.js","components/Minter/Minter.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","state","clicked","handleClick","setState","className","smooth","to","src","logo","alt","onClick","this","Component","About","id","Roadmap","Team","FAQS","href","target","Connect","Home","coverPhoto","coverPhotoMobile","require","config","contractABI","contractAddress","process","web3","createAlchemyWeb3","connectWallet","a","window","ethereum","request","method","addressArray","obj","status","address","message","rel","getCurrentWalletConnected","length","mintNFT","_mintAmount","eth","Contract","contract","mintCost","selectedAddress","toString","transactionParameters","from","data","methods","mint","encodeABI","value","parseInt","utils","toWei","params","txHash","success","handleRevert","Minter","useState","walletAddress","setWallet","setStatus","transactionStatus","setTransactionStatus","transactionURL","setTransactionURL","transactionURLTxt","setTransactionURLTxt","addWalletListener","on","accounts","document","getElementById","disabled","useEffect","connectWalletPressed","walletResponse","wait","ms","Promise","resolve","setTimeout","onMintPressed","alert","innerHTML","mintNFTResponse","i","getTransactionReceipt","txReceipt","secondsPassed","console","log","tokenIdArr","tokenId","push","style","color","Fragment","String","substring","htmlFor","name","Footer","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2856fb60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Crypto-Hermits-Logo-2-Small.54b58327.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport './Navbar.css';\nimport logo from './Crypto-Hermits-Logo-2-Small.png';\n\nclass Navbar extends Component {\n\tstate = { clicked: false };\n\n\thandleClick = () => {\n\t\t// whenver you click, change clicked state to opposite\n\t\tthis.setState({ clicked: !this.state.clicked });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<header className='parent-nav'>\n\t\t\t\t<nav className='NavbarItems'>\n\t\t\t\t\t<HashLink smooth to={'/#Home'}>\n\t\t\t\t\t\t<img src={logo} className='navbar-logo' alt='CryptoHermits Logo' />\n\t\t\t\t\t</HashLink>\n\t\t\t\t\t<div className='menu-icon' onClick={this.handleClick}>\n\t\t\t\t\t\t{/* if it's clicked, change menu icon into X, if it's not then be the bars */}\n\t\t\t\t\t\t{/* in other words, if you click the mobile nav bar then open and set icon to X */}\n\t\t\t\t\t\t<i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\n\t\t\t\t\t\t<HashLink smooth to={'/#Home'} className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t\t<Link to='/mint' className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tMint NFT\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<HashLink smooth to={'/#About'} className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t\t<HashLink smooth to={'/#Roadmap'} className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tRoadmap\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t\t<HashLink smooth to={'/#Team'} className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tTeam\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t\t<HashLink smooth to={'/#FAQS'} className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tFAQS\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t\t<HashLink smooth to={'/#Connect'} className='nav-links' onClick={this.handleClick}>\n\t\t\t\t\t\t\tConnect\n\t\t\t\t\t\t</HashLink>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/desktop.2043187a.jpeg\";","export default __webpack_public_path__ + \"static/media/mobile.9191d20d.jpeg\";","import React, { Component } from 'react';\nimport './About.css';\n\nclass About extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='section' id='About'>\n\t\t\t\t<h1>About</h1>\n\t\t\t\t<br></br>\n\t\t\t\t<p>\n\t\t\t\t\tAfter decades of down time and solitude the crypto hermits are ready to make some noise. We are our generations overlooked modern day rebels. Join the revolution of bookworms, self\n\t\t\t\t\tsufficient homesteaders, homeschoolers, fighters of free speech and leaders of ethical sustainable living. Collect art and make friends with those of who are just as intentional\n\t\t\t\t\t(and fed up) as you. We just want to be left alone and leaves others alone. Lets find peace in solitary, together.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport './Roadmap.css';\n\nclass Roadmap extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='section' id='Roadmap'>\n\t\t\t\t<h1>Roadmap</h1>\n\t\t\t\t<br></br>\n\t\t\t\t<p>\n\t\t\t\t\tWe are starting off with the bookworm\n\t\t\t\t\tcollection and if we reach 100% we will\n\t\t\t\t\tbegin working on the homesteader\n\t\t\t\t\tcollection.\n\t\t\t\t</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>25%</h2>\n\t\t\t\t<p>Airdrop</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>50%</h2>\n\t\t\t\t<p>Donating $20,000 to an illiteracy program</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>75%</h2>\n\t\t\t\t<p>\n\t\t\t\t\tMerch - reading lights, bookmarks, lava\n\t\t\t\t\tlamps, blankets, mugs, teas\n\t\t\t\t</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>100%</h2>\n\t\t\t\t<p>\n\t\t\t\t\tLiquidity pool. All inclusive tropical\n\t\t\t\t\tvacation\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Roadmap;\n","import React, { Component } from 'react';\nimport './Team.css';\n\nclass Team extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='section' id='Team'>\n\t\t\t\t<h1>Team</h1>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>Founders</h2>\n\t\t\t\t<br></br>\n\t\t\t\t<p>\n\t\t\t\t\tDue to the social climate we have decided to stay anonymous. This reaffirms something we strongly believe in. Who we are in the terms of controversial categories like gender, race,\n\t\t\t\t\tand political affiliations do not matter. Our beliefs and character define us. The elites do not get to divide us unless we consent to prioritizing our differences compared to our\n\t\t\t\t\tsimilarities. We are all together on this beautiful planet; join the rebellion of hermits. This is the way.\n\t\t\t\t</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>Artist</h2>\n\t\t\t\t<br></br>\n\t\t\t\t<p>Jeremy Webster</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Team;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './FAQS.css';\n\nclass FAQS extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='section' id='FAQS'>\n\t\t\t\t<h1>FAQS</h1>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>How do I download MetaMask and fund my MetaMask wallet?</h2>\n\t\t\t\t<p>\n\t\t\t\t\t1. You will need to{' '}\n\t\t\t\t\t<a href='https://metamask.io/download' target='_blank'>\n\t\t\t\t\t\tdownload MetaMask\n\t\t\t\t\t</a>\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t2.{' '}\n\t\t\t\t\t<a href='https://www.coinbase.com/buy-ethereum' target='_blank'>\n\t\t\t\t\t\tBuy Ethereum\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tfrom an exchange.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t3.{' '}\n\t\t\t\t\t<a href='https://www.coinbase.com/learn/tips-and-tutorials/how-to-send-crypto' target='_blank'>\n\t\t\t\t\t\tTransfer it\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tto your MetaMask Wallet.\n\t\t\t\t</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>How do I mint an NFT?</h2>\n\t\t\t\t<p>\n\t\t\t\t\tOnce you have MetaMask installed and Ethereum in your wallet you can{' '}\n\t\t\t\t\t<Link to='/mint' target='_blank'>\n\t\t\t\t\t\tclick here\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tto mint an NFT.\n\t\t\t\t</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>When can I mint an NFT?</h2>\n\t\t\t\t<p>You can officially mint an NFT on January 8th at 1:00 pm ET.</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>What do you have planned for the future of CryptoHermits?</h2>\n\t\t\t\t<p>\n\t\t\t\t\tWe have a lot planned once we reach 100% in sales for the bookworm collection. The next collection we are excited for is the homesteader collection. From there we hope to expand to\n\t\t\t\t\tother collections. We want to create a community of self-sufficient, independent thinkers who aren't afraid to fight censorship!\n\t\t\t\t</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<h2>Can I buy on my mobile phone?</h2>\n\t\t\t\t<p>Yes, simply download MetaMask for iOS or Android and visit our site using the MetaMask browser.</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FAQS;\n","import React, { Component } from 'react';\nimport './Connect.css';\n\nclass Connect extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='section' id='Connect'>\n\t\t\t\t<h1>Connect</h1>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<i className='fab fa-twitter fa-2x center' id='twitter'></i>\n\t\t\t\t<i className='fab fa-discord fa-2x center' id='discord'></i>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<p>\n\t\t\t\t\tChat with us on Twitter and connect with friends on Discord who are just as intentional (and fed up) as you. We just want to be left alone and leave others alone. Let's find peace\n\t\t\t\t\tin solitary, together.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Connect;\n","import React, { Component } from 'react';\nimport './Home.css';\nimport coverPhoto from './desktop.jpeg';\nimport coverPhotoMobile from './mobile.jpeg';\nimport About from '../About/About';\nimport Roadmap from '../Roadmap/Roadmap';\nimport Team from '../Team/Team';\nimport FAQS from '../FAQS/FAQS';\nimport Connect from '../Connect/Connect';\n\nclass Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div id='Home'>\n\t\t\t\t\t<img src={coverPhoto} className='coverPhoto' alt='CryptoHermits Logo' />\n\t\t\t\t\t<img src={coverPhotoMobile} className='coverPhotoMobile' alt='CryptoHermits Logo Mobile' />\n\t\t\t\t</div>\n\t\t\t\t<About />\n\t\t\t\t<hr className='line-break' />\n\t\t\t\t<Roadmap />\n\t\t\t\t<hr className='line-break' />\n\t\t\t\t<Team />\n\t\t\t\t<hr className='line-break' />\n\t\t\t\t<FAQS />\n\t\t\t\t<hr className='line-break' />\n\t\t\t\t<Connect />\n\t\t\t\t<hr className='line-break' />\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","require('dotenv').config();\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require('../contract-abi.json');\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\nconst { createAlchemyWeb3 } = require('@alch/alchemy-web3');\n// Alchemy Web 3 is a wrapper around Web3.js providing enchanced API methods\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nexport const connectWallet = async () => {\n\t// window.ethereum is a global API injected by Metamask and other wallet providers that allows websites to request users' Ethereum accounts\n\t// if approved, it can read data from the blockchains the user is connected to, and suggest that the user sign messages and transactions\n\tif (window.ethereum) {\n\t\ttry {\n\t\t\tconst addressArray = await window.ethereum.request({\n\t\t\t\t// eth_requestAccounts opens up Metamask in the browser\n\t\t\t\tmethod: 'eth_requestAccounts',\n\t\t\t});\n\t\t\tconst obj = {\n\t\t\t\tstatus: '👆🏽 Click above to get your CryptoHermit NFT',\n\t\t\t\taddress: addressArray[0],\n\t\t\t};\n\t\t\treturn obj;\n\t\t} catch (err) {\n\t\t\treturn {\n\t\t\t\taddress: '',\n\t\t\t\tstatus: '😥 ' + err.message,\n\t\t\t};\n\t\t}\n\t}\n\t// window.ethereum is not present that means metamask is not installed\n\telse {\n\t\treturn {\n\t\t\taddress: '',\n\t\t\tstatus: (\n\t\t\t\t<span>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t🦊{' '}\n\t\t\t\t\t\t<a target='_blank' rel='noreferrer' href={`https://metamask.io/download.html`}>\n\t\t\t\t\t\t\tYou must install Metamask, a virtual Ethereum wallet, in your browser or mobile phone.\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</span>\n\t\t\t),\n\t\t};\n\t}\n};\n\n// similar to function above\nexport const getCurrentWalletConnected = async () => {\n\tif (window.ethereum) {\n\t\ttry {\n\t\t\t// eth_accounts returns an array containing the Metamask addresses currentl yconnected to our dApp\n\t\t\tconst addressArray = await window.ethereum.request({\n\t\t\t\tmethod: 'eth_accounts',\n\t\t\t});\n\t\t\tif (addressArray.length > 0) {\n\t\t\t\treturn {\n\t\t\t\t\taddress: addressArray[0],\n\t\t\t\t\tstatus: '👆🏽 Click above to get your CryptoHermit NFT',\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\taddress: '',\n\t\t\t\t\tstatus: '🦊 Connect to Metamask using the top right button.',\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn {\n\t\t\t\taddress: '',\n\t\t\t\tstatus: '😥 ' + err.message,\n\t\t\t};\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\taddress: '',\n\t\t\tstatus: (\n\t\t\t\t<span>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t🦊{' '}\n\t\t\t\t\t\t<a target='_blank' rel='noreferrer' href={`https://metamask.io/download.html`}>\n\t\t\t\t\t\t\tYou must install Metamask, a virtual Ethereum wallet, in your browser or mobile phone.\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</span>\n\t\t\t),\n\t\t};\n\t}\n};\n\nexport const mintNFT = async (_mintAmount) => {\n\t// create new contract to mint NFT tokenURI\n\twindow.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\tvar mintCost;\n\n\tif (window.ethereum.selectedAddress === '0x48547bc59493d081e8f62944d526443d84fdc4d6') {\n\t\tmintCost = 0;\n\t} else {\n\t\tmintCost = _mintAmount * 0.01;\n\t}\n\tmintCost = mintCost.toString();\n\n\t// set up your Ethereum transaction\n\tconst transactionParameters = {\n\t\t// Required except during contract publications.\n\t\tto: contractAddress,\n\t\t// must match user's active address.\n\t\tfrom: window.ethereum.selectedAddress,\n\t\t// make call to NFT smart contract with _mintAmount\n\t\tdata: window.contract.methods.mint(_mintAmount).encodeABI(),\n\t\t// value\n\t\tvalue: parseInt(web3.utils.toWei(mintCost, 'ether')).toString(16),\n\t};\n\n\t// sign the transaction via Metamask\n\ttry {\n\t\tconst txHash = await window.ethereum.request({\n\t\t\t// send transaction. this will ask the user to sign or reject the transaction\n\t\t\tmethod: 'eth_sendTransaction',\n\t\t\t// with parameters from above\n\t\t\tparams: [transactionParameters],\n\t\t});\n\t\treturn {\n\t\t\ttxHash: txHash,\n\t\t\tsuccess: true,\n\t\t\tstatus: '✅ Please keep this tab open until your transaction is complete.',\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t\tstatus: '😥 Something went wrong: ' + error.message,\n\t\t};\n\t}\n};\n","import React, { useEffect, useState } from 'react';\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from '../../util/interact.js';\nimport './Minter.css';\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst { createAlchemyWeb3 } = require('@alch/alchemy-web3');\n// Alchemy Web 3 is a wrapper around Web3.js providing enchanced API methods\nconst web3 = createAlchemyWeb3(alchemyKey);\nweb3.eth.handleRevert = true;\n\nconst Minter = () => {\n\t// string that stores the user's wallet address\n\tconst [walletAddress, setWallet] = useState('');\n\t// string that contains a message to display at the bottom of the UI\n\tconst [status, setStatus] = useState('');\n\t// string that contains the pending transaction string to display at the bottom of the UI\n\tconst [transactionStatus, setTransactionStatus] = useState('');\n\t// string that contains the transactionURL to display at the bottom of the UI\n\tconst [transactionURL, setTransactionURL] = useState('');\n\t// string that contains the transactionURLTxt to display at the bottom of the UI\n\tconst [transactionURLTxt, setTransactionURLTxt] = useState('');\n\n\t// called after component is rendered\n\t// call wallet listener and another wallet function to update UI to reflect whether a wallet is already connected\n\tuseEffect(() => {\n\t\tasync function connectWallet() {\n\t\t\t// empty [] means it will be only called on the component's first render\n\t\t\tconst { address, status } = await getCurrentWalletConnected();\n\n\t\t\tsetWallet(address);\n\t\t\tsetStatus(status);\n\n\t\t\taddWalletListener();\n\t\t}\n\t\tconnectWallet();\n\t}, []);\n\n\tfunction addWalletListener() {\n\t\t// check if Metamask is installed\n\t\tif (window.ethereum) {\n\t\t\t// if enabled, add listener to see if state changes\n\t\t\t// state changes include when user connects an additional account, switches accounts, or disconnects an account\n\t\t\twindow.ethereum.on('accountsChanged', (accounts) => {\n\t\t\t\t// if there is at least one account connected, set walletAddress to the first account\n\t\t\t\tif (accounts.length > 0) {\n\t\t\t\t\tsetWallet(accounts[0]);\n\t\t\t\t\tsetStatus('👆🏽 Click above to get your BitBird NFT');\n\t\t\t\t}\n\t\t\t\t// else prompt user to connect to Metamask\n\t\t\t\telse {\n\t\t\t\t\tsetWallet('');\n\t\t\t\t\tsetStatus('🦊 Connect to Metamask using the top right button.');\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdocument.getElementById('mintButton').disabled = true;\n\t\t\tsetStatus(\n\t\t\t\t<p>\n\t\t\t\t\t{' '}\n\t\t\t\t\t🦊{' '}\n\t\t\t\t\t<a target='_blank' rel='noreferrer' href={`https://metamask.io/download.html`}>\n\t\t\t\t\t\tYou must install Metamask, a virtual Ethereum wallet, in your browser or mobile phone.\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t}\n\n\t// connect the user's Metamask wallet to our dApp\n\tconst connectWalletPressed = async () => {\n\t\tconst walletResponse = await connectWallet();\n\t\t// update status\n\t\tsetStatus(walletResponse.status);\n\t\t// update wallet address\n\t\tsetWallet(walletResponse.address);\n\t};\n\n\tasync function wait(ms) {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(resolve, ms);\n\t\t});\n\t}\n\n\t// called to mint the user's NFT\n\tconst onMintPressed = async () => {\n\t\tsetTransactionStatus(' ');\n\t\tsetTransactionURL(' ');\n\t\tsetTransactionURLTxt(' ');\n\n\t\tvar txHash;\n\t\tvar success;\n\t\tvar status;\n\t\tvar mintNFTResponse;\n\n\t\tvar _mintAmount = document.getElementById('mintAmount').value;\n\n\t\tif (_mintAmount === '') {\n\t\t\talert('mint amount cannot be empty');\n\t\t\treturn;\n\t\t}\n\n\t\tif (_mintAmount > 3) {\n\t\t\talert('mint amount cannot be greater than 3');\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.getElementById('mintButton').innerHTML = 'loading Metamask...';\n\n\t\t// call smart contract to mint url\n\t\tmintNFTResponse = await mintNFT(_mintAmount);\n\n\t\ttxHash = mintNFTResponse['txHash'];\n\t\tsuccess = mintNFTResponse['success'];\n\t\tstatus = mintNFTResponse['status'];\n\n\t\tif (success) {\n\t\t\tdocument.getElementById('mintButton').innerHTML = 'pending transaction...';\n\n\t\t\tsetTransactionStatus(`Check out your pending transaction on Etherscan in a new tab while you wait.`);\n\t\t\tsetTransactionURL(`https://rinkeby.etherscan.io/tx/${txHash}`);\n\t\t\tsetTransactionURLTxt('Pending Transaction');\n\t\t} else {\n\t\t\tdocument.getElementById('mintButton').innerHTML = 'Mint NFT';\n\n\t\t\tsetStatus(status);\n\t\t\treturn;\n\t\t}\n\n\t\tsetStatus(status);\n\n\t\t// check and see if the transaction hash is completed or still pending\n\t\t// max of 58 minutes to wait\n\t\tfor (var i = 0; i < 175; i++) {\n\t\t\t// failed example 0xec7f5f035cc1e831e4dcc9cb3fb67b1d4a6e41dc45aaa5986ae81163f1d3355c\n\t\t\tvar txReceipt = await web3.eth.getTransactionReceipt(txHash);\n\t\t\t// ----------------------------------------------------------- example of txReceipt -----------------------------------------------------------\n\t\t\t// blockHash: \"0x11822fba16e3f52c58b806eb9248e5697274d81b9b4d05e32e00782fb12f335b\"\n\t\t\t// blockNumber: 11144942\n\t\t\t// contractAddress: null\n\t\t\t// cumulativeGasUsed: 1480730\n\t\t\t// effectiveGasPrice: \"0x7c15db11\"\n\t\t\t// from: \"0x53434cf062fd750ed4efa7b552e72ab800acea18\"\n\t\t\t// gasUsed: 150112\n\t\t\t// logs: (2) [{…}, {…}]\n\t\t\t// logsBloom: \"0xn\t\t\t// status: true\n\t\t\t// to: \"0x52c7715d5d41f5245d30a27297bd84f3121b290d\"\n\t\t\t// transactionHash: \"0x72684be0b4df5608fdaf9530b2fea8c36b6658f6c98e92fd5fb87b674fe2ce71\"\n\t\t\t// transactionIndex: 16\n\t\t\t// type: \"0x2\"\n\n\t\t\tif (txReceipt === null) {\n\t\t\t\tawait wait(5000);\n\t\t\t\tvar newI = i + 1;\n\t\t\t\tvar secondsPassed = newI * 5;\n\t\t\t\tsecondsPassed = secondsPassed.toString();\n\n\t\t\t\tconsole.log(`${secondsPassed} seconds has passed for the pending transaction`);\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconsole.log(txReceipt);\n\t\tconsole.log(txHash);\n\n\t\t// upon completion of transaction, update success variable\n\t\tvar txSuccess = txReceipt['status'];\n\n\t\t// if the transaction was successful, then get the tokenId\n\t\tif (txSuccess) {\n\t\t\tvar tokenIdArr = [];\n\t\t\tvar tokenId;\n\t\t\tconsole.log(txReceipt['logs']);\n\n\t\t\tif (txReceipt['logs'].length < 3) {\n\t\t\t\ttokenId = parseInt(txReceipt['logs'][1]['data'], 16);\n\t\t\t\ttokenIdArr.push(tokenId);\n\n\t\t\t\tsetTransactionStatus(`Now that your transaction is completed, you can view your NFT on Open Sea once the metadata is revealed. Your token id is ${tokenIdArr}.`);\n\t\t\t\tsetTransactionURLTxt('Completed Transaction');\n\t\t\t} else {\n\t\t\t\tfor (let i = 1; i <= txReceipt['logs'].length; i += 2) {\n\t\t\t\t\ttokenId = parseInt(txReceipt['logs'][i]['data'], 16);\n\t\t\t\t\ttokenIdArr.push(tokenId);\n\t\t\t\t}\n\n\t\t\t\tsetTransactionStatus(`Now that your transaction is completed, you can view your NFTs on Open Sea once the metadata is revealed. Your token ids are ${tokenIdArr}.`);\n\t\t\t\tsetTransactionURLTxt('Completed Transaction');\n\t\t\t}\n\n\t\t\t// if (txResponse.status >= 400 && txResponse.status < 600) {\n\t\t\t// }\n\n\t\t\t// var txResponseJson = await txResponse.json();\n\t\t\t// console.log(txResponseJson);\n\t\t\tdocument.getElementById('mintButton').innerHTML = 'Mint NFT';\n\t\t} else {\n\t\t\t// failed example 0xec7f5f035cc1e831e4dcc9cb3fb67b1d4a6e41dc45aaa5986ae81163f1d3355c\n\t\t\tdocument.getElementById('transactionStatus').style.color = 'red';\n\t\t\tsetTransactionStatus(`Please click the link below for the reason your transaction failed.`);\n\t\t\tsetTransactionURL(`https://rinkeby.etherscan.io/tx/${txHash}`);\n\t\t\tsetTransactionURLTxt('Failed Transaction');\n\t\t}\n\n\t\tdocument.getElementById('mintButton').innerHTML = 'Mint NFT';\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className='section'>\n\t\t\t\t<h1 id='title'>Mint NFT</h1>\n\t\t\t\t<br></br>\n\t\t\t\t<button id='walletButton' onClick={connectWalletPressed}>\n\t\t\t\t\t{walletAddress.length > 0 ? 'Connected: ' + String(walletAddress).substring(0, 6) + '...' + String(walletAddress).substring(38) : <span>Connect Wallet</span>}\n\t\t\t\t</button>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<p>Get your random CryptoHermit NFT below, all NFTs are 0.01 ETH!</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<label htmlFor='mintAmount'>Number of NFTs to mint (3 max per wallet)</label>\n\t\t\t\t<br></br>\n\t\t\t\t<select name='mintAmount' id='mintAmount'>\n\t\t\t\t\t<option value='1'>1</option>\n\t\t\t\t\t<option value='2'>2</option>\n\t\t\t\t\t<option value='3'>3</option>\n\t\t\t\t</select>\n\t\t\t\t<br></br>\n\t\t\t\t<button id='mintButton' onClick={onMintPressed}>\n\t\t\t\t\tMint NFT\n\t\t\t\t</button>\n\t\t\t\t<p id='status'>{status}</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<p id='transactionStatus'>\n\t\t\t\t\t{transactionStatus}\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<a href={`${transactionURL}`} target='_blank' rel='noreferrer'>\n\t\t\t\t\t\t{transactionURLTxt}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Minter;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id='Footer'>\n\t\t\t\t<p>&copy; 2021 CryptoHermits</p>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<hr className='footer-line' />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Minter from './components/Minter/Minter';\nimport Footer from './components/Footer/Footer';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path='/' element={<Home />} />\n\t\t\t\t\t\t<Route path='/mint' element={<Minter />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}