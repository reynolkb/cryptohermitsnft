"""
Configuration parameters.
"""
import os
from dotenv import load_dotenv

load_dotenv()

############################################# STANDARD PROCESSING PARAMETERS #############################################
# Get the DATABASE_CONNECTION_STRING from the environment (.env or Heroku config)
DATABASE_CONNECTION_STRING = os.getenv("DATABASE_CONNECTION_STRING")

# The port for the localhost database.  Only relevant if DATABASE_CONNECTION_STRING is an empty string or None.
DATABASE_LOCAL_PORT = 27017

# Get the 'FRONTEND_BACKEND_PASSWORD' which can be used for sensitive front-end flask app calls into back-end
# methods like SetTokensMinted().
FRONTEND_BACKEND_PASSWORD = os.getenv("FRONTEND_BACKEND_PASSWORD")


########################################## GENERATIVE NFT COLLECTION DEFINITIONS #########################################
# The generation of each NFT collection is fully defined by the parameters specified in it's definition.
NFT_DEFINITION_BOOKWORMS = {
    # The name of the collection that will appear in mongoDB and in the NFT metadata.
    "Name": "Bookworms",
    # The total quantity of NFT images that will be generated.
    "TotalQuantity": 55,  # 5555
    # The initial quantity of tokens that will have their metadata and images exposable by mongoDB.
    "QuantityOfExposableTokens": 5,
    # Writing the images to disk is very slow, so you can set this to False if you are just testing and don't
    # need the images stored on disk.
    "WriteImagesToDisk": True,
    # It can be very slow to update a remote mongoDB, so set this to False if you are just testing and don't
    # need the images stored in mongoDB.
    "UploadImagesToDatabase": True,
    # The type/extension of both the input attribute inages and the output NFT images. (png, jpg, etc.)
    "ImageType": "png",
    # Main folder containing the input attribute images.
    "AttributeImageFolder": "CryptoHermits/Bookworm/AttributeImages/",
    # The output folder containing the final generated NFT images.
    "OutputImageFolder": "CryptoHermits/Bookworm/OutputImages/",
    # The output folder containing the final generated NFT metadata files.
    "OutputMetadataFolder": "CryptoHermits/Bookworm/OutputMetadata/",
    # TODO: Kyle needs to clean up these comments, or move them to an implementation document.
    # Round 1 - Images and metadata are on Mongo via nftInitializeDatabase
    # Round 2 - Images on Mongo, JSON on Mongo. Buyer views on OpenSea
    # Check Mongo and make sure Mongo returns correct metadata.
    #   Example: https://www.cryptohermitsnft.com/1.json should return the correct metadata for NFT 1
    # Launch smart contract and make base uri https://cryptohermitsnft.com/metadata/
    # Update BaseImageUri hash to hash of IPFS image folder
    # 'BaseExternalUri' : 'https://gateway.pinata.cloud/ipfs/QmVpkXZkWoTf9AQWzHcA4HZxjRRpJPoSUUekL2RX5sMbxd/',
    # 'BaseImageUri' : 'ipfs://QmVpkXZkWoTf9AQWzHcA4HZxjRRpJPoSUUekL2RX5sMbxd/',
    # Round 3 - Images on IPFS, JSON on IPFS. Sale is over and all NFTs are sold.
    # Update smart contract base uri to ipfs://QmYrVgtkHnXDw9KURzgSbmejgzpEcje6FV5AofEmBx98kz/
    # The base uri for the field 'external_url' in the metadate.
    "BaseExternalUri": "https://www.cryptohermitsnft.com/images/",
    # The base uri for the field 'image' in the metadate.
    "BaseImageUri": "https://www.cryptohermitsnft.com/images/",
    # This is a list of the traits.  Each NFT is generated by stepping through this list of traits in sequential order,
    # generating a random attribute for that trait based on it's probability, and then pasting that attribute onto
    # the image.
    # Each trait has:
    #    1. A unique name.
    #    2. A list of attributes specific to the trait.
    # Each attribute has:
    #    1. A unique name.
    #    2. An optional filepath (which will default to the unique name if not specified).
    #    3. A probability.
    "Traits": (
        # Level 0
        {
            "Name": "Floor",
            "Attributes": (
                {"Name": "Checkered", "Probability": 1},
                {"Name": "Concrete", "Probability": 1},
                {"Name": "Grass", "Probability": 1},
                {"Name": "Shag_Rug", "Probability": 1},
                {"Name": "Wood_Floor", "Probability": 1},
            ),
        },
        # Level 1
        {
            "Name": "Left Wall",
            "Attributes": ({"Name": "Left_Wall", "Probability": 1},),
        },
        # Level 2
        {
            "Name": "Back Wall",
            "Attributes": (
                # {"Name": "Blank_Wall", "Probability": 1},
                {"Name": "Brick_Wall", "Probability": 1},
                {"Name": "Last_Supper_Wall", "Probability": 1},
                {"Name": "Marriage_Wall", "Probability": 1},
                {"Name": "Palm_Tree_Wall", "Probability": 1},
                {"Name": "Roses_Wall", "Probability": 1},
                {"Name": "TV_Wall", "Probability": 1},
            ),
        },
        # Level 3
        {
            "Name": "Decor",
            "Attributes": (
                # {"Name": "Nothing", "FilePath": None, "Probability": 1},
                {"Name": "Cannabis", "Probability": 1},
                {"Name": "Disco_Ball", "Probability": 1},
                {"Name": "Gun_Lamp", "Probability": 1},
                {"Name": "Lava_Lamp", "Probability": 1},
                {"Name": "Leg_Lamp", "Probability": 1},
                {"Name": "Torch", "Probability": 1},
            ),
        },
        # Level 4
        {
            "Name": "Chair",
            "Attributes": (
                {"Name": "Flag_Chair", "Probability": 1},
                {"Name": "Leather_Chair", "Probability": 1},
                {"Name": "Plaid_Chair", "Probability": 1},
                {"Name": "Polka_Dot_Chair", "Probability": 1},
                {"Name": "Shell_Chair", "Probability": 1},
                {"Name": "Tie_Dye_Chair", "Probability": 1},
            ),
        },
        # Level 5
        {
            "Name": "Hair",
            "Attributes": (
                {"Name": "Dark_Beehive", "Probability": 1},
                {"Name": "Dark_Box_Braids", "Probability": 1},
                {"Name": "Dark_Buzzcut", "Probability": 1},
                {"Name": "Dark_Mohawk", "Probability": 1},
                {"Name": "Dark_Rainbow_Hair", "Probability": 1},
                {"Name": "Light_Beehive", "Probability": 1},
                {"Name": "Light_Box_Braids", "Probability": 1},
                {"Name": "Light_Buzzcut", "Probability": 1},
                {"Name": "Light_Mohawk", "Probability": 1},
                {"Name": "Light_Rainbow_Hair", "Probability": 1},
                {"Name": "Medium_Beehive", "Probability": 1},
                {"Name": "Medium_Box_Braids", "Probability": 1},
                {"Name": "Medium_Buzzcut", "Probability": 1},
                {"Name": "Medium_Mohawk", "Probability": 1},
                {"Name": "Medium_Rainbow_Hair", "Probability": 1},
                # A Mullet can be worn by any body, irrespective of skin tone.
                {"Name": "Mullet", "Probability": 1},
            ),
        },
        # Level 6
        {
            "Name": "Body",
            "Attributes": (
                {"Name": "Dark_Bell_Bottoms", "Probability": 1},
                {"Name": "Dark_Manwoman", "Probability": 1},
                {"Name": "Dark_Robe", "Probability": 1},
                {"Name": "Dark_Suit", "Probability": 1},
                {"Name": "Dark_Tracksuit", "Probability": 1},
                {"Name": "Light_Bell_Bottoms", "Probability": 1},
                {"Name": "Light_Manwoman", "Probability": 1},
                {"Name": "Light_Robe", "Probability": 1},
                {"Name": "Light_Suit", "Probability": 1},
                {"Name": "Light_Tracksuit", "Probability": 1},
                {"Name": "Medium_Bell_Bottoms", "Probability": 1},
                {"Name": "Medium_Manwoman", "Probability": 1},
                {"Name": "Medium_Robe", "Probability": 1},
                {"Name": "Medium_Suit", "Probability": 1},
                {"Name": "Medium_Tracksuit", "Probability": 1},
            ),
        },
        # Level 7
        {
            "Name": "Book Color",
            "Attributes": (
                # {"Name": "Mythic", "Probability": 1}, # Not applicable.  Mythic will be using the Signature Series images.
                {"Name": "Exotic", "Probability": 1},
                {"Name": "Legendary", "Probability": 1},
                {"Name": "Epic", "Probability": 1},
                {"Name": "Rare", "Probability": 1},
                {"Name": "Uncommon", "Probability": 1},
                {"Name": "Common", "Probability": 1},
            ),
        },
        # Level 8
        {
            "Name": "Book Title",
            "Attributes": (
                {"Name": "Comply_Or_Die", "Probability": 1},
                {"Name": "Don't_Shed_On_Me", "Probability": 1},
                {"Name": "How_To_Survive_The_Y2K", "Probability": 1},
                {"Name": "Men_On_The_Moon", "Probability": 1},
                {"Name": "Soul_Not_For_Sale", "Probability": 1},
                {"Name": "The_12_Steps_for_Social_Media_Addicts", "Probability": 1},
            ),
        },
        # Level 9
        {
            "Name": "Shoes",
            "Attributes": (
                # These shoes can be worn by any body.
                {"Name": "Boots", "Probability": 1},
                {"Name": "Converse", "Probability": 1},
                {"Name": "Socks_Slides", "Probability": 1},
                # These shoes can only be worn by a body with the matching clothes.  The skin tone of the body is irrelevant.
                {"Name": "Boots_Bell_Bottoms", "Probability": 1},
                {"Name": "Converse_Bell_Bottoms", "Probability": 1},
                {"Name": "Converse_Suit", "Probability": 1},
                {"Name": "Converse_Tracksuit", "Probability": 1},
                {"Name": "Dress_Shoes_Bell_Bottoms", "Probability": 1},
                {"Name": "Dress_Shoes_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Dress_Shoes_Suit", "Probability": 1},
                {"Name": "Dress_Shoes_Tracksuit", "Probability": 1},
                {"Name": "Socks_Slides_Bell_Bottoms", "Probability": 1},
                {"Name": "Socks_Slides_Suit", "Probability": 1},
                {"Name": "Socks_Slides_Tracksuit", "Probability": 1},
                # These shoes can only be worn by a dark body with the matching clothes.
                {"Name": "Dark_High_Heels_Bell_Bottoms", "Probability": 1},
                {"Name": "Dark_High_Heels_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Dark_High_Heels_Suit", "Probability": 1},
                {"Name": "Dark_High_Heels_Tracksuit", "Probability": 1},
                {"Name": "Dark_Slippers_Bell_Bottoms", "Probability": 1},
                {"Name": "Dark_Slippers_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Dark_Slippers_Suit", "Probability": 1},
                {"Name": "Dark_Slippers_Tracksuit", "Probability": 1},
                # These shoes can only be worn by a light body with the matching clothes.
                {"Name": "Light_High_Heels_Bell_Bottoms", "Probability": 1},
                {"Name": "Light_High_Heels_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Light_High_Heels_Suit", "Probability": 1},
                {"Name": "Light_High_Heels_Tracksuit", "Probability": 1},
                {"Name": "Light_Slippers_Bell_Bottoms", "Probability": 1},
                {"Name": "Light_Slippers_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Light_Slippers_Suit", "Probability": 1},
                {"Name": "Light_Slippers_Tracksuit", "Probability": 1},
                # These shoes can only be worn by a medium body with the matching clothes.
                {"Name": "Medium_High_Heels_Bell_Bottoms", "Probability": 1},
                {"Name": "Medium_High_Heels_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Medium_High_Heels_Suit", "Probability": 1},
                {"Name": "Medium_High_Heels_Tracksuit", "Probability": 1},
                {"Name": "Medium_Slippers_Bell_Bottoms", "Probability": 1},
                {"Name": "Medium_Slippers_Robe_Manwoman", "Probability": 1},  # These can be worn both by a 'Robe' or 'Manwoman' body.
                {"Name": "Medium_Slippers_Suit", "Probability": 1},
                {"Name": "Medium_Slippers_Tracksuit", "Probability": 1},
            ),
        },
        # Level 10
        {
            # You have to have the sideboard, otherwise there will be a hole in the left wall.
            "Name": "Sideboard",
            "Attributes": (
                # {"Name": "Nothing", "FilePath": None, "Probability": 1},
                {"Name": "Sideboard", "Probability": 1},
            ),
        },
        # Level 11
        {
            "Name": "Sideboard Object",
            "Attributes": (
                # {"Name": "Nothing", "FilePath": None, "Probability": 1},
                {"Name": "Beer_Bottle", "Probability": 1},
                {"Name": "Bong", "Probability": 1},
                {"Name": "Cigars", "Probability": 1},
                {"Name": "Coffee_Mug", "Probability": 1},
                {"Name": "Crypto_Hermit", "Probability": 1},  # This is hard-coded for the highest rarity level.
                {"Name": "Tumbler", "Probability": 1},
                {"Name": "Wine_Bottle", "Probability": 1},
            ),
        },
        # Level 12
        {
            "Name": "Rings",
            "Attributes": (
                {"Name": "Nothing", "FilePath": None, "Probability": 1},
                {"Name": "Wedding_Band", "Probability": 1},
            ),
        },
    ),
    # Each 'Rarity' has:
    #    1. A unique name.
    #    2. A percentage (e.g. the percentage of all NFTs that will have this rarity).
    #    3. A list of mandatory included trait attributes and/or a list of mandatory excluded trait attributes.
    #    4. An optional 'FinalImageFolder' for stand-alone final images that are not built up from attributes.
    # For this Bookworms collection, each rarity level is visually identifiable by the 'Book Color' attribute.
    "Rarities": (
        # Mythic: Comletely Custom (e.g. Signature Series)
        {
            "Name": "Mythic",
            "Percentage": 2,  # 0.22 * 5555 = 12 Total signature series images.
            "FinalImageFolder": "CryptoHermits/Bookworm/SignatureImages/",
        },
        # Exotic: Force Sideboard Object to be "Crypto_Hermit"
        {
            "Name": "Exotic",
            "Percentage": 3,  # 4.78
            "Traits": (
                {"Name": "Book Color", "Inclusions": "Exotic"},
                {"Name": "Sideboard Object", "Inclusions": "Crypto_Hermit"},
            ),
        },
        # Legendary
        {
            "Name": "Legendary",
            "Percentage": 9,
            "Traits": (
                {"Name": "Back Wall", "Inclusions": "Last_Supper_Wall"},
                {"Name": "Book Color", "Inclusions": "Legendary"},
                {"Name": "Sideboard Object", "Exclusions": "Crypto_Hermit"},
            ),
        },
        # Epic
        {
            "Name": "Epic",
            "Percentage": 14,
            "Traits": (
                {"Name": "Back Wall", "Inclusions": "Brick_Wall"},
                {"Name": "Book Color", "Inclusions": "Epic"},
                {"Name": "Sideboard Object", "Exclusions": "Crypto_Hermit"},
            ),
        },
        # Rare
        {
            "Name": "Rare",
            "Percentage": 19,
            "Traits": (
                {"Name": "Back Wall", "Inclusions": "Marriage_Wall"},
                {"Name": "Book Color", "Inclusions": "Rare"},
                {"Name": "Sideboard Object", "Exclusions": "Crypto_Hermit"},
            ),
        },
        # Uncommon
        {
            "Name": "Uncommon",
            "Percentage": 24,
            "Traits": (
                {"Name": "Back Wall", "Inclusions": "Palm_Tree_Wall"},
                {"Name": "Book Color", "Inclusions": "Uncommon"},
                {"Name": "Sideboard Object", "Exclusions": "Crypto_Hermit"},
            ),
        },
        # Common
        {
            "Name": "Common",
            "Percentage": 29,
            "Traits": (
                {"Name": "Back Wall", "Inclusions": "TV_Wall"},
                {"Name": "Book Color", "Inclusions": "Common"},
                {"Name": "Sideboard Object", "Exclusions": "Crypto_Hermit"},
            ),
        },
    ),
    # The Inclusions define a list of 2 traits that define a valid combination as such:
    # If the first trait has one of it's listed attribute values, then the second trait must also have one of
    # it's listed attribute values.  See comments below for examples.
    "Inclusions": (
        # --------------------------------- Hair/Body Inclusions ---------------------------------
        # If the 'Hair' trait starts with 'Dark_*', then the body must also start with 'Dark_*'.
        (("Hair", "Dark_*"), ("Body", "Dark_*")),
        # If the 'Hair' trait starts with 'Light_*', then the body must also start with 'Light_*'.
        (("Hair", "Light_*"), ("Body", "Light_*")),
        # If the 'Hair' trait starts with 'Medium_*', then the body must also start with 'Medium_*'.
        (("Hair", "Medium_*"), ("Body", "Medium_*")),
        # --------------------------------- Body/Shoes Inclusions ---------------------------------
        # Dark_Bell_Bottoms
        #   If the 'Body' trait is Dark_Bell_Bottoms, then the 'Shoes' trait must be in the specified list of shoes.
        (
            ("Body", "Dark_Bell_Bottoms"),
            ("Shoes", ("Boots_Bell_Bottoms", "Converse_Bell_Bottoms", "Dark_High_Heels_Bell_Bottoms", "Dark_Slippers_Bell_Bottoms", "Dress_Shoes_Bell_Bottoms", "Socks_Slides_Bell_Bottoms")),
        ),
        # Medium_Bell_Bottoms
        (
            ("Body", "Medium_Bell_Bottoms"),
            ("Shoes", ("Boots_Bell_Bottoms", "Converse_Bell_Bottoms", "Medium_High_Heels_Bell_Bottoms", "Medium_Slippers_Bell_Bottoms", "Dress_Shoes_Bell_Bottoms", "Socks_Slides_Bell_Bottoms")),
        ),
        # Light_Bell_Bottoms
        (
            ("Body", "Light_Bell_Bottoms"),
            ("Shoes", ("Boots_Bell_Bottoms", "Converse_Bell_Bottoms", "Light_High_Heels_Bell_Bottoms", "Light_Slippers_Bell_Bottoms", "Dress_Shoes_Bell_Bottoms", "Socks_Slides_Bell_Bottoms")),
        ),
        # Dark_Manwoman
        (
            ("Body", "Dark_Manwoman"),
            ("Shoes", ("Boots", "Converse", "Dark_High_Heels_Robe_Manwoman", "Dark_Slippers_Robe_Manwoman", "Dress_Shoes_Robe_Manwoman", "Socks_Slides")),
        ),
        # Medium_Manwoman
        (
            ("Body", "Medium_Manwoman"),
            ("Shoes", ("Boots", "Converse", "Medium_High_Heels_Robe_Manwoman", "Medium_Slippers_Robe_Manwoman", "Dress_Shoes_Robe_Manwoman", "Socks_Slides")),
        ),
        # Light_Manwoman
        (
            ("Body", "Light_Manwoman"),
            ("Shoes", ("Boots", "Converse", "Light_High_Heels_Robe_Manwoman", "Light_Slippers_Robe_Manwoman", "Dress_Shoes_Robe_Manwoman", "Socks_Slides")),
        ),
        # Dark_Robe
        (
            ("Body", "Dark_Robe"),
            ("Shoes", ("Boots", "Converse", "Dark_High_Heels_Robe_Manwoman", "Dark_Slippers_Robe_Manwoman", "Dress_Shoes_Robe_Manwoman", "Socks_Slides")),
        ),
        # Medium_Robe
        (
            ("Body", "Medium_Robe"),
            ("Shoes", ("Boots", "Converse", "Medium_High_Heels_Robe_Manwoman", "Medium_Slippers_Robe_Manwoman", "Dress_Shoes_Robe_Manwoman", "Socks_Slides")),
        ),
        # Light_Robe
        (
            ("Body", "Light_Robe"),
            ("Shoes", ("Boots", "Converse", "Light_High_Heels_Robe_Manwoman", "Light_Slippers_Robe_Manwoman", "Dress_Shoes_Robe_Manwoman", "Socks_Slides")),
        ),
        # Dark_Suit
        (
            ("Body", "Dark_Suit"),
            ("Shoes", ("Boots", "Converse_Suit", "Dark_High_Heels_Suit", "Dark_Slippers_Suit", "Dress_Shoes_Suit", "Socks_Slides_Suit")),
        ),
        # Medium_Suit
        (
            ("Body", "Medium_Suit"),
            ("Shoes", ("Boots", "Converse_Suit", "Medium_High_Heels_Suit", "Medium_Slippers_Suit", "Dress_Shoes_Suit", "Socks_Slides_Suit")),
        ),
        # Light_Suit
        (
            ("Body", "Light_Suit"),
            ("Shoes", ("Boots", "Converse_Suit", "Light_High_Heels_Suit", "Light_Slippers_Suit", "Dress_Shoes_Suit", "Socks_Slides_Suit")),
        ),
        # Dark_Tracksuit
        (
            ("Body", "Dark_Tracksuit"),
            ("Shoes", ("Boots", "Converse_Tracksuit", "Dark_High_Heels_Tracksuit", "Dark_Slippers_Tracksuit", "Dress_Shoes_Tracksuit", "Socks_Slides_Tracksuit")),
        ),
        # Medium_Tracksuit
        (
            ("Body", "Medium_Tracksuit"),
            ("Shoes", ("Boots", "Converse_Tracksuit", "Medium_High_Heels_Tracksuit", "Medium_Slippers_Tracksuit", "Dress_Shoes_Tracksuit", "Socks_Slides_Tracksuit")),
        ),
        # Light_Tracksuit
        (
            ("Body", "Light_Tracksuit"),
            ("Shoes", ("Boots", "Converse_Tracksuit", "Light_High_Heels_Tracksuit", "Light_Slippers_Tracksuit", "Dress_Shoes_Tracksuit", "Socks_Slides_Tracksuit")),
        ),
    ),
    # 'Exclusions' define invalid trait combinations.  See below comments for examples.
    "Exclusions": (
        # --------------------------------- Boring/Plain Exclusions ---------------------------------
        # A TV_Wall cannot be combined with a Concrete Floor.
        {"Back Wall": "TV_Wall", "Floor": "Concrete"},
        # A TV_Wall cannot be combined with a Leather Chair.
        {"Back Wall": "TV_Wall", "Chair": "Leather_Chair"},
        # A Concrete floor cannot be combined with a Leather Chair.
        {"Floor": "Concrete", "Chair": "Leather_Chair"},
        # ------------------------------- John's Body/Hair Exclusions -------------------------------
        # The Dark_Beehive and Medium_Beehive scalp skin colors are both light.  They do not match their Dark_* and
        # Medium_* bodies.  The artist should really darken their scalp skin tones, and possibly darken their hair color.
        # But for now, just exclude the Dark_Beehive and Medium_Beehive.
        {
            "Hair": (
                "Dark_Beehive",
                "Medium_Beehive",
            )
        },
        # The Light_Box_Braids and Medium_Box_Braids scalp is way too dark for their bodies.
        {
            "Hair": (
                "Light_Box_Braids",
                "Medium_Box_Braids",
            )
        },
        # The Buzz_Cuts all look good.
        # The Dark_Mohawk does not look natural on the Dark_* bodies.
        {"Hair": "Dark_Mohawk"},
        # The Dark_Rainbow_Hair does not look natural on the Dark_* bodies.
        {"Hair": "Dark_Rainbow_Hair"},
        ## The Mullet does not look natural on the Dark_* bodies.  Unless they dyed their hair.
        {"Hair": "Mullet", "Body": "Dark_*"},
        # ------------------------------- Unfashionable Body/Shoe Exclusions -------------------------------
        # *_Manwoman
        {
            "Body": "*_Manwoman",
            "Shoes": (
                "Converse*",
                "Dress_Shoes_*",
            ),
        },
        # *_Robe
        {
            "Body": "*_Robe",
            "Shoes": (
                "Boots*",
                "Converse*",
                "Dress_Shoes_*",
                "*_High_Heels_*",
            ),
        },
        # *_Suit
        {"Body": "*_Suit", "Shoes": ("Converse*", "*_High_Heels_*", "*_Slippers_*", "Socks_Slides_*")},
        # *_Tracksuit
        {
            "Body": "*_Tracksuit",
            "Shoes": (
                "Boots*",
                "Dress_Shoes_*",
                "*_High_Heels_*",
            ),
        },
    ),
}
